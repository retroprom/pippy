#ifndef COMPLEXOBJECT_C_H
#define COMPLEXOBJECT_C_H

#include "proto_defs.h"

static Py_complex c_powu Py_PROTO((Py_complex, long)) SEG_COMPLEXOBJECT_C;
static Py_complex c_powi Py_PROTO((Py_complex, long)) SEG_COMPLEXOBJECT_C;
static void complex_buf_repr Py_PROTO((char *, PyComplexObject *)) SEG_COMPLEXOBJECT_C;

UNARYFUNC_PROTO(complex_neg) SEG_COMPLEXOBJECT_C;
UNARYFUNC_PROTO(complex_pos) SEG_COMPLEXOBJECT_C;
UNARYFUNC_PROTO(complex_abs) SEG_COMPLEXOBJECT_C;
UNARYFUNC_PROTO(complex_int) SEG_COMPLEXOBJECT_C;
UNARYFUNC_PROTO(complex_long) SEG_COMPLEXOBJECT_C;
UNARYFUNC_PROTO(complex_float) SEG_COMPLEXOBJECT_C;
BINARYFUNC_PROTO(complex_add) SEG_COMPLEXOBJECT_C;
BINARYFUNC_PROTO(complex_sub) SEG_COMPLEXOBJECT_C;
BINARYFUNC_PROTO(complex_mul) SEG_COMPLEXOBJECT_C;
BINARYFUNC_PROTO(complex_div) SEG_COMPLEXOBJECT_C;
BINARYFUNC_PROTO(complex_remainder) SEG_COMPLEXOBJECT_C;
BINARYFUNC_PROTO(complex_divmod) SEG_COMPLEXOBJECT_C;
TERNARYFUNC_PROTO(complex_pow) SEG_COMPLEXOBJECT_C;
INQUIRY_PROTO(complex_nonzero) SEG_COMPLEXOBJECT_C;
COERCION_PROTO(complex_coerce) SEG_COMPLEXOBJECT_C;
DESTRUCTOR_PROTO(complex_dealloc) SEG_COMPLEXOBJECT_C;
PRINTFUNC_PROTO(complex_print) SEG_COMPLEXOBJECT_C;
GETATTRFUNC_PROTO(complex_getattr) SEG_COMPLEXOBJECT_C;
CMPFUNC_PROTO(complex_compare) SEG_COMPLEXOBJECT_C;
REPRFUNC_PROTO(complex_repr) SEG_COMPLEXOBJECT_C;
HASHFUNC_PROTO(complex_hash) SEG_COMPLEXOBJECT_C;
PYCFUNCTION_PROTO(complex_conjugate) SEG_COMPLEXOBJECT_C;
PYCFUNCTION_PROTO(builtin_complex) SEG_COMPLEXOBJECT_C;

#endif /* COMPLEXOBJECT_C_H */

